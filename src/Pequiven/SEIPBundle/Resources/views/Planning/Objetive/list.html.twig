{% extends "PequivenSEIPBundle:Template:Developer/Common/tableFormat1.html.twig" %}

{% trans_default_domain 'PequivenObjetiveBundle' %}

{% set labelHeader = {
    (constant('Pequiven\\ObjetiveBundle\\Model\\ObjetiveLevel::LEVEL_ESTRATEGICO')):'pequiven_objetive.objetive_strategic',
    (constant('Pequiven\\ObjetiveBundle\\Model\\ObjetiveLevel::LEVEL_TACTICO')):'pequiven_objetive.objetive_tactic',
    (constant('Pequiven\\ObjetiveBundle\\Model\\ObjetiveLevel::LEVEL_OPERATIVO')):'pequiven_objetive.objetive_operative',
} %}

{% block title %}- {{ (labelHeader[level])|trans }}{% endblock %}

{% block before_body %}
    {{ contentHeader(
        ((labelHeader[level])|trans),
        ('pequiven_objetive.list'|trans)
    ) }}
{% endblock %}

{% block body %}
    <input type="hidden" id="level" value="{{ level }}">
    <div ng-controller="TableFormatController">
        <div ng-controller="TableObjetiveController">
            <details class="details margin-bottom" open="">
                <summary role="button" aria-expanded="true">
                    {{ 'pequiven.filters'|trans({},'messages') }}

                </summary>
                <div class="with-padding">
                    <div class="columns">

                         <div class="new-row-tablet new-row-mobile six-columns twelve-columns-tablet">
                            <label class="bold">{{ 'pequiven_objetive.status.status'|trans }}</label>
                            <br/>
                            <div class="with-mid-padding">
                                <select class="select2 input-xlarge" id="selectStatus" ng-model="model.objetiveStatus" ng-options="value as value.description for (key,value) in data.objetiveStatusLabels">
                                    <option value=''></option>
                                </select>
                            </div>
                        </div>
                            
                        {% if (level > 1) %}
                            <div class="new-row new-row-tablet new-row-mobile six-columns twelve-columns-tablet">
                                <label class="bold">{{ 'pequiven_seip.filters.complejo'|trans({},'PequivenSEIPBundle') }}</label>
                                <br/>
                                <div class="with-mid-padding">
                                    <select class="select2 input-xlarge" id="selectComplejos" ng-model="model.complejo" ng-change="getFirstLineManagement(model.complejo.id);getSecondLineManagement()" ng-options="value as value.description for (key,value) in data.complejos">
                                        <option value=''></option>
                                    </select>
                                </div>
                            </div>
                            <div class="new-row-tablet new-row-mobile six-columns twelve-columns-tablet">
                                <label class="bold">{{ 'pequiven_seip.filters.first_line_management'|trans({},'PequivenSEIPBundle') }}</label>
                                <br/>
                                <div class="with-mid-padding">
                                    <select class="select2 input-xlarge" id="firstLineManagement" ng-model="model.firstLineManagement" ng-change="getSecondLineManagement(model.firstLineManagement.id);getTactics(model.firstLineManagement.id)" ng-options="value as value.description group by value.complejo.description for (key,value) in data.first_line_managements">
                                        <option value=''></option>
                                    </select>
                                </div>
                            </div>
                            {#<div class="new-row new-row-mobile-portrait six-columns twelve-columns-tablet twelve-columns-mobile-landscape twelve-columns-mobile-portrait">
                                <label class="bold">{{ 'pequiven_seip.gerenciaFirst'|trans({},'PequivenSEIPBundle') }}</label>
                                <br/>
                                <div class="with-mid-padding">
                                    <select ng-model="gerenciaFirst" id="selectGerenciaFirst" class="select2-offscreen populate" style="width:300px;">
                                    </select>
                                </div>
                            </div>#}
                        {% endif %}
                        
                        {% if (level == 3) %}
                            <div class="new-row new-row-tablet new-row-mobile six-columns twelve-columns-tablet">
                                <label class="bold">{{ 'pequiven_seip.filters.management_second_line'|trans({},'PequivenSEIPBundle') }}</label>
                                <br/>
                                <div class="with-mid-padding">
                                    <select class="select2 input-xlarge" id="secondLineManagement" ng-model="model.secondLineManagement" ng-options="value as value.description group by (value.complejo.ref + ' - '+value.gerencia.description) for (key,value) in data.second_line_managements">
                                        <option value=''></option>
                                    </select>
                                </div>
                            </div>
                            {#<div class="new-row-mobile six-columns twelve-columns-tablet twelve-columns-mobile">
                                <label class="bold">{{ 'pequiven_seip.gerenciaSecond'|trans({},'PequivenSEIPBundle') }}</label>
                                <br/>
                                <div class="with-mid-padding">
                                    <select ng-model="gerenciaSecond" id="selectGerenciaSecond" class="select2-offscreen populate" style="width:300px;">                                        
                                    </select>
                                </div>
                            </div>#}
                        {% endif %}
                    </div>
                </div>
            </details>
            
            <div loading-container="tableParams.settings().$loading">
                <table ng-table="tableParams" show-filter="true" template-pagination="custom/pager" ng-init="data.objetiveStatusLabels = {{ labelsStatus|serialize }}" template-header="custom/header" api-data-url="{{ apiDataUrl }}" export-csv="csv" class="table table-responsive table-extra-info">
                    <tbody>
                        <tr ng-repeat="result in $data" data="{$ result|json $}">
                            <td data-title="'{{ (labelHeader[level])|trans }}'" sortable="'ref'" filter="{'description' : 'text'}">
                                <a href="{$ result._links.self.href $}">{$ result.ref+result.description $}{%if (level == 3) %} ({$ result.gerenciaSecond.description $}) {% endif %}</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script type="text/javascript">
        
        var selectGerenciaFirst =  $("#selectGerenciaFirst"),//Select de Gerencia de 1ra Línea
            selectGerenciaSecond =  $("#selectGerenciaSecond"),//Select de Gerencia de 2da Línea
            inputHiddenLevel = $("#level"),//
            inputHiddenRoleName = $("rolUser")//
        ;
        
        $(document).ready(function()
        {
            charge();
            
            function charge(){
                $('.select2').select2({
                    allowClear: true
                });
               chargeSelectGerenciaFirst();
               selectGerenciaSecond.select2({

                });
                selectGerenciaSecond.select2("enable",false);
            }
        });
        
        selectGerenciaFirst.on("select2-selecting", function(e) {
            console.log(inputHiddenLevel);
            if(inputHiddenLevel.val() == 3){
                chargeSelectGerenciaSecond(e);
            }
        })
        
        //Función que actualiza el select de indicadores en caso de que se cambie la lína estratégica o se agregue un nuevo indicador a partir de este formulario
        function chargeSelectGerenciaFirst(){
            var data = {
            };
            $.ajax({
                type: 'post',
                url: '{{ path("objetiveGerenciaFirstTactic") }}',
                data: data,
                success: function(data) {

                    if(typeof data[0].empty === 'undefined'){
                        var cantidad = data.length;
                        var text = '';
                        text = text + '<option value="0">Todas</option>';
                        text = text + '<optgroup label="' + data[0].optGroup + '">';

                        for(var i=0, total = data.length; i<total; i++){
                            if(i == 0){
                                text = text + '<option value="' + data[i].id + '" >' + data[i].description + '</option>';
                            } else if (data[i].idComplejo != data[i-1].idComplejo && (i + 1) < cantidad ){
                                text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '" >' + data[i].description + '</option>';
                            } else if (data[i].idComplejo != data[i-1].idComplejo && (i + 1) == cantidad ){
                                text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '" >' + data[i].description + '</option> </optgroup>';
                            } else if ((i+1) == cantidad){
                                text = text +'<option value="' + data[i].id + '" >' + data[i].description + '</option> </optgroup>';
                            } else{
                                text = text + '<option value="' + data[i].id + '" >' + data[i].description + '</option>';
                            }
                        }
                        
                        selectGerenciaFirst.append(text);
                        chargeSelect2GerenciaFirst("full");
                    } else{
                        chargeSelect2GerenciaFirst("empty");
                    }
                }
            });
        }
        
        function chargeSelectGerenciaSecond(e){
            var data = {
                gerencia: $.trim(e.val),
            };
            $.ajax({
                type: 'post',
                url: '{{ path("objetiveGerenciaSecondOperative") }}',
                data: data,
                success: function(data) {
                                    
                    $("#selectGerenciaSecond optgroup").remove();
                    $("#selectGerenciaSecond option[value]").remove();

                    if(typeof data[0].empty === 'undefined'){
                        var cantidad = data.length;
                        var text = '';
                        text = text + '<option value="0">Todas</option>';
                        
                        text = text + '<optgroup label="' + data[0].optGroup + '">';

                        for(var i=0, total = data.length; i<total; i++){
                            if(i == 0){
                                text = text + '<option value="' + data[i].id + '">' + data[i].description + '</option>';
                            } else if (data[i].idGroup != data[i-1].idGroup && (i + 1) < cantidad ){
                                text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '">' + data[i].description + '</option>';
                            } else if (data[i].idGroup != data[i-1].idGroup && (i + 1) == cantidad ){
                                text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '" >' + data[i].description + '</option> </optgroup>';
                            } else if ((i+1) == cantidad){
                                text = text +'<option value="' + data[i].id + '">' + data[i].description + '</option> </optgroup>';
                            } else{
                                text = text + '<option value="' + data[i].id + '">' + data[i].description + '</option>';
                            }
                        }
                        selectGerenciaSecond.append(text);
                        selectGerenciaSecond.select2({
                        });
                        selectGerenciaSecond.select2("enable",true);
                    } else{
                        chargeSelect2GerenciaSecond("empty");
                    }
                }
            });
        }
        
        //Función que carga el select2 de Gerencia de 2da Línea
        function chargeSelect2GerenciaSecond(type){
            selectGerenciaSecond.select2({
                placeholder: '{{ 'form.messages.selectObjetiveStrategicPlaceholder'|trans }}',
                formatNoMatches: function(term) {
                    if(type == 'full'){
                        return "{{ 'form.messages.selectObjetiveStrategicFormatNoMatcher'|trans }}";
                    } else if (type == 'empty'){
                        return "{{ 'form.messages.selectObjetiveStrategicFormatNoResult'|trans }}";
                    } else {
                        return "{{ 'form.messages.selectObjetiveStrategicFormatNoMatcher'|trans }}";
                    }
                }
            });
        }
        
        //Función que carga el select2 de Gerencia de 1ra Línea
        function chargeSelect2GerenciaFirst(type){
            selectGerenciaFirst.select2({
                placeholder: '{{ 'form.messages.selectObjetiveStrategicPlaceholder'|trans }}',
                formatNoMatches: function(term) {
                    if(type == 'full'){
                        return "{{ 'form.messages.selectObjetiveStrategicFormatNoMatcher'|trans }}";
                    } else if (type == 'empty'){
                        return "{{ 'form.messages.selectObjetiveStrategicFormatNoResult'|trans }}";
                    } else {
                        return "{{ 'form.messages.selectObjetiveStrategicFormatNoMatcher'|trans }}";
                    }
                }
            });
        }
        
        function getTableExtraInfo(data)
            {
                var response = '';
                
                {#var totalIndicators = data.indicators.length;
                if(totalIndicators > 0){
                    response = response + '<strong>{{ 'pequiven_objetive.popup.indicators'|trans }}:</strong><br>';
                    for(var i = 0; i < totalIndicators; i++){
                        response = response + data.indicators[i].ref + data.indicators[i].description;
                        if(data.indicators[i].formula){
                            response = response + '&nbsp;Fórmula: ' + data.indicators[i].formula.equation;
                        }
                        response = response + '<br>';
                    }
                }#}
                return response;
            }
    </script>
    
{% endblock %}
